/**
 * generated by Xtext 2.17.1
 */
package fr.n7.jEU.impl;

import fr.n7.jEU.JEUPackage;
import fr.n7.jEU.action;
import fr.n7.jEU.choix;
import fr.n7.jEU.condition;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>choix</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.jEU.impl.choixImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.choixImpl#getDescription <em>Description</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.choixImpl#getActions <em>Actions</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.choixImpl#isEstFin <em>Est Fin</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.choixImpl#getConditionFin <em>Condition Fin</em>}</li>
 * </ul>
 *
 * @generated
 */
public class choixImpl extends MinimalEObjectImpl.Container implements choix
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The default value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected static final String DESCRIPTION_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getDescription() <em>Description</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getDescription()
   * @generated
   * @ordered
   */
  protected String description = DESCRIPTION_EDEFAULT;

  /**
   * The cached value of the '{@link #getActions() <em>Actions</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActions()
   * @generated
   * @ordered
   */
  protected EList<action> actions;

  /**
   * The default value of the '{@link #isEstFin() <em>Est Fin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isEstFin()
   * @generated
   * @ordered
   */
  protected static final boolean EST_FIN_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isEstFin() <em>Est Fin</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isEstFin()
   * @generated
   * @ordered
   */
  protected boolean estFin = EST_FIN_EDEFAULT;

  /**
   * The cached value of the '{@link #getConditionFin() <em>Condition Fin</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditionFin()
   * @generated
   * @ordered
   */
  protected condition conditionFin;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected choixImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JEUPackage.Literals.CHOIX;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CHOIX__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getDescription()
  {
    return description;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDescription(String newDescription)
  {
    String oldDescription = description;
    description = newDescription;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CHOIX__DESCRIPTION, oldDescription, description));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<action> getActions()
  {
    if (actions == null)
    {
      actions = new EObjectContainmentEList<action>(action.class, this, JEUPackage.CHOIX__ACTIONS);
    }
    return actions;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isEstFin()
  {
    return estFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEstFin(boolean newEstFin)
  {
    boolean oldEstFin = estFin;
    estFin = newEstFin;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CHOIX__EST_FIN, oldEstFin, estFin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public condition getConditionFin()
  {
    return conditionFin;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditionFin(condition newConditionFin, NotificationChain msgs)
  {
    condition oldConditionFin = conditionFin;
    conditionFin = newConditionFin;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JEUPackage.CHOIX__CONDITION_FIN, oldConditionFin, newConditionFin);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConditionFin(condition newConditionFin)
  {
    if (newConditionFin != conditionFin)
    {
      NotificationChain msgs = null;
      if (conditionFin != null)
        msgs = ((InternalEObject)conditionFin).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JEUPackage.CHOIX__CONDITION_FIN, null, msgs);
      if (newConditionFin != null)
        msgs = ((InternalEObject)newConditionFin).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JEUPackage.CHOIX__CONDITION_FIN, null, msgs);
      msgs = basicSetConditionFin(newConditionFin, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CHOIX__CONDITION_FIN, newConditionFin, newConditionFin));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JEUPackage.CHOIX__ACTIONS:
        return ((InternalEList<?>)getActions()).basicRemove(otherEnd, msgs);
      case JEUPackage.CHOIX__CONDITION_FIN:
        return basicSetConditionFin(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JEUPackage.CHOIX__NAME:
        return getName();
      case JEUPackage.CHOIX__DESCRIPTION:
        return getDescription();
      case JEUPackage.CHOIX__ACTIONS:
        return getActions();
      case JEUPackage.CHOIX__EST_FIN:
        return isEstFin();
      case JEUPackage.CHOIX__CONDITION_FIN:
        return getConditionFin();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JEUPackage.CHOIX__NAME:
        setName((String)newValue);
        return;
      case JEUPackage.CHOIX__DESCRIPTION:
        setDescription((String)newValue);
        return;
      case JEUPackage.CHOIX__ACTIONS:
        getActions().clear();
        getActions().addAll((Collection<? extends action>)newValue);
        return;
      case JEUPackage.CHOIX__EST_FIN:
        setEstFin((Boolean)newValue);
        return;
      case JEUPackage.CHOIX__CONDITION_FIN:
        setConditionFin((condition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.CHOIX__NAME:
        setName(NAME_EDEFAULT);
        return;
      case JEUPackage.CHOIX__DESCRIPTION:
        setDescription(DESCRIPTION_EDEFAULT);
        return;
      case JEUPackage.CHOIX__ACTIONS:
        getActions().clear();
        return;
      case JEUPackage.CHOIX__EST_FIN:
        setEstFin(EST_FIN_EDEFAULT);
        return;
      case JEUPackage.CHOIX__CONDITION_FIN:
        setConditionFin((condition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.CHOIX__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case JEUPackage.CHOIX__DESCRIPTION:
        return DESCRIPTION_EDEFAULT == null ? description != null : !DESCRIPTION_EDEFAULT.equals(description);
      case JEUPackage.CHOIX__ACTIONS:
        return actions != null && !actions.isEmpty();
      case JEUPackage.CHOIX__EST_FIN:
        return estFin != EST_FIN_EDEFAULT;
      case JEUPackage.CHOIX__CONDITION_FIN:
        return conditionFin != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(", description: ");
    result.append(description);
    result.append(", estFin: ");
    result.append(estFin);
    result.append(')');
    return result.toString();
  }

} //choixImpl
