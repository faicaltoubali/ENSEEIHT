/**
 * generated by Xtext 2.17.1
 */
package fr.n7.jEU.impl;

import fr.n7.jEU.Connaissance;
import fr.n7.jEU.JEUPackage;
import fr.n7.jEU.condition;
import fr.n7.jEU.typeactivite;
import fr.n7.jEU.typevisibilite;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Connaissance</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.jEU.impl.ConnaissanceImpl#getVisibilite <em>Visibilite</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ConnaissanceImpl#getActivite <em>Activite</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ConnaissanceImpl#isEstPossede <em>Est Possede</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ConnaissanceImpl#getAcces <em>Acces</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ConnaissanceImpl#getVisible <em>Visible</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ConnaissanceImpl extends JeuElementImpl implements Connaissance
{
  /**
   * The default value of the '{@link #getVisibilite() <em>Visibilite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibilite()
   * @generated
   * @ordered
   */
  protected static final typevisibilite VISIBILITE_EDEFAULT = typevisibilite.VISIBLE;

  /**
   * The cached value of the '{@link #getVisibilite() <em>Visibilite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibilite()
   * @generated
   * @ordered
   */
  protected typevisibilite visibilite = VISIBILITE_EDEFAULT;

  /**
   * The default value of the '{@link #getActivite() <em>Activite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActivite()
   * @generated
   * @ordered
   */
  protected static final typeactivite ACTIVITE_EDEFAULT = typeactivite.ACTIF;

  /**
   * The cached value of the '{@link #getActivite() <em>Activite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActivite()
   * @generated
   * @ordered
   */
  protected typeactivite activite = ACTIVITE_EDEFAULT;

  /**
   * The default value of the '{@link #isEstPossede() <em>Est Possede</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isEstPossede()
   * @generated
   * @ordered
   */
  protected static final boolean EST_POSSEDE_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isEstPossede() <em>Est Possede</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isEstPossede()
   * @generated
   * @ordered
   */
  protected boolean estPossede = EST_POSSEDE_EDEFAULT;

  /**
   * The cached value of the '{@link #getAcces() <em>Acces</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getAcces()
   * @generated
   * @ordered
   */
  protected condition acces;

  /**
   * The cached value of the '{@link #getVisible() <em>Visible</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisible()
   * @generated
   * @ordered
   */
  protected condition visible;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ConnaissanceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JEUPackage.Literals.CONNAISSANCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public typevisibilite getVisibilite()
  {
    return visibilite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibilite(typevisibilite newVisibilite)
  {
    typevisibilite oldVisibilite = visibilite;
    visibilite = newVisibilite == null ? VISIBILITE_EDEFAULT : newVisibilite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__VISIBILITE, oldVisibilite, visibilite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public typeactivite getActivite()
  {
    return activite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActivite(typeactivite newActivite)
  {
    typeactivite oldActivite = activite;
    activite = newActivite == null ? ACTIVITE_EDEFAULT : newActivite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__ACTIVITE, oldActivite, activite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isEstPossede()
  {
    return estPossede;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEstPossede(boolean newEstPossede)
  {
    boolean oldEstPossede = estPossede;
    estPossede = newEstPossede;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__EST_POSSEDE, oldEstPossede, estPossede));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public condition getAcces()
  {
    return acces;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetAcces(condition newAcces, NotificationChain msgs)
  {
    condition oldAcces = acces;
    acces = newAcces;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__ACCES, oldAcces, newAcces);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setAcces(condition newAcces)
  {
    if (newAcces != acces)
    {
      NotificationChain msgs = null;
      if (acces != null)
        msgs = ((InternalEObject)acces).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JEUPackage.CONNAISSANCE__ACCES, null, msgs);
      if (newAcces != null)
        msgs = ((InternalEObject)newAcces).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JEUPackage.CONNAISSANCE__ACCES, null, msgs);
      msgs = basicSetAcces(newAcces, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__ACCES, newAcces, newAcces));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public condition getVisible()
  {
    return visible;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetVisible(condition newVisible, NotificationChain msgs)
  {
    condition oldVisible = visible;
    visible = newVisible;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__VISIBLE, oldVisible, newVisible);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisible(condition newVisible)
  {
    if (newVisible != visible)
    {
      NotificationChain msgs = null;
      if (visible != null)
        msgs = ((InternalEObject)visible).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JEUPackage.CONNAISSANCE__VISIBLE, null, msgs);
      if (newVisible != null)
        msgs = ((InternalEObject)newVisible).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JEUPackage.CONNAISSANCE__VISIBLE, null, msgs);
      msgs = basicSetVisible(newVisible, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.CONNAISSANCE__VISIBLE, newVisible, newVisible));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JEUPackage.CONNAISSANCE__ACCES:
        return basicSetAcces(null, msgs);
      case JEUPackage.CONNAISSANCE__VISIBLE:
        return basicSetVisible(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JEUPackage.CONNAISSANCE__VISIBILITE:
        return getVisibilite();
      case JEUPackage.CONNAISSANCE__ACTIVITE:
        return getActivite();
      case JEUPackage.CONNAISSANCE__EST_POSSEDE:
        return isEstPossede();
      case JEUPackage.CONNAISSANCE__ACCES:
        return getAcces();
      case JEUPackage.CONNAISSANCE__VISIBLE:
        return getVisible();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JEUPackage.CONNAISSANCE__VISIBILITE:
        setVisibilite((typevisibilite)newValue);
        return;
      case JEUPackage.CONNAISSANCE__ACTIVITE:
        setActivite((typeactivite)newValue);
        return;
      case JEUPackage.CONNAISSANCE__EST_POSSEDE:
        setEstPossede((Boolean)newValue);
        return;
      case JEUPackage.CONNAISSANCE__ACCES:
        setAcces((condition)newValue);
        return;
      case JEUPackage.CONNAISSANCE__VISIBLE:
        setVisible((condition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.CONNAISSANCE__VISIBILITE:
        setVisibilite(VISIBILITE_EDEFAULT);
        return;
      case JEUPackage.CONNAISSANCE__ACTIVITE:
        setActivite(ACTIVITE_EDEFAULT);
        return;
      case JEUPackage.CONNAISSANCE__EST_POSSEDE:
        setEstPossede(EST_POSSEDE_EDEFAULT);
        return;
      case JEUPackage.CONNAISSANCE__ACCES:
        setAcces((condition)null);
        return;
      case JEUPackage.CONNAISSANCE__VISIBLE:
        setVisible((condition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.CONNAISSANCE__VISIBILITE:
        return visibilite != VISIBILITE_EDEFAULT;
      case JEUPackage.CONNAISSANCE__ACTIVITE:
        return activite != ACTIVITE_EDEFAULT;
      case JEUPackage.CONNAISSANCE__EST_POSSEDE:
        return estPossede != EST_POSSEDE_EDEFAULT;
      case JEUPackage.CONNAISSANCE__ACCES:
        return acces != null;
      case JEUPackage.CONNAISSANCE__VISIBLE:
        return visible != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (visibilite: ");
    result.append(visibilite);
    result.append(", activite: ");
    result.append(activite);
    result.append(", estPossede: ");
    result.append(estPossede);
    result.append(')');
    return result.toString();
  }

} //ConnaissanceImpl
