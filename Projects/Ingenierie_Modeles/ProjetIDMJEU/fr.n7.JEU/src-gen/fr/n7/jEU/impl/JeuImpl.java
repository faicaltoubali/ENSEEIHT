/**
 * generated by Xtext 2.17.1
 */
package fr.n7.jEU.impl;

import fr.n7.jEU.JEUPackage;
import fr.n7.jEU.Jeu;
import fr.n7.jEU.JeuElement;
import fr.n7.jEU.Joueur;

import java.util.Collection;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.common.util.EList;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.eclipse.emf.ecore.util.EObjectContainmentEList;
import org.eclipse.emf.ecore.util.InternalEList;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Jeu</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.jEU.impl.JeuImpl#getName <em>Name</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.JeuImpl#getJoueur <em>Joueur</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.JeuImpl#getJeuelement <em>Jeuelement</em>}</li>
 * </ul>
 *
 * @generated
 */
public class JeuImpl extends MinimalEObjectImpl.Container implements Jeu
{
  /**
   * The default value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected static final String NAME_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getName() <em>Name</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getName()
   * @generated
   * @ordered
   */
  protected String name = NAME_EDEFAULT;

  /**
   * The cached value of the '{@link #getJoueur() <em>Joueur</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJoueur()
   * @generated
   * @ordered
   */
  protected Joueur joueur;

  /**
   * The cached value of the '{@link #getJeuelement() <em>Jeuelement</em>}' containment reference list.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getJeuelement()
   * @generated
   * @ordered
   */
  protected EList<JeuElement> jeuelement;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected JeuImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JEUPackage.Literals.JEU;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getName()
  {
    return name;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setName(String newName)
  {
    String oldName = name;
    name = newName;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.JEU__NAME, oldName, name));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Joueur getJoueur()
  {
    return joueur;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetJoueur(Joueur newJoueur, NotificationChain msgs)
  {
    Joueur oldJoueur = joueur;
    joueur = newJoueur;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JEUPackage.JEU__JOUEUR, oldJoueur, newJoueur);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setJoueur(Joueur newJoueur)
  {
    if (newJoueur != joueur)
    {
      NotificationChain msgs = null;
      if (joueur != null)
        msgs = ((InternalEObject)joueur).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JEUPackage.JEU__JOUEUR, null, msgs);
      if (newJoueur != null)
        msgs = ((InternalEObject)newJoueur).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JEUPackage.JEU__JOUEUR, null, msgs);
      msgs = basicSetJoueur(newJoueur, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.JEU__JOUEUR, newJoueur, newJoueur));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public EList<JeuElement> getJeuelement()
  {
    if (jeuelement == null)
    {
      jeuelement = new EObjectContainmentEList<JeuElement>(JeuElement.class, this, JEUPackage.JEU__JEUELEMENT);
    }
    return jeuelement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JEUPackage.JEU__JOUEUR:
        return basicSetJoueur(null, msgs);
      case JEUPackage.JEU__JEUELEMENT:
        return ((InternalEList<?>)getJeuelement()).basicRemove(otherEnd, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JEUPackage.JEU__NAME:
        return getName();
      case JEUPackage.JEU__JOUEUR:
        return getJoueur();
      case JEUPackage.JEU__JEUELEMENT:
        return getJeuelement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @SuppressWarnings("unchecked")
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JEUPackage.JEU__NAME:
        setName((String)newValue);
        return;
      case JEUPackage.JEU__JOUEUR:
        setJoueur((Joueur)newValue);
        return;
      case JEUPackage.JEU__JEUELEMENT:
        getJeuelement().clear();
        getJeuelement().addAll((Collection<? extends JeuElement>)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.JEU__NAME:
        setName(NAME_EDEFAULT);
        return;
      case JEUPackage.JEU__JOUEUR:
        setJoueur((Joueur)null);
        return;
      case JEUPackage.JEU__JEUELEMENT:
        getJeuelement().clear();
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.JEU__NAME:
        return NAME_EDEFAULT == null ? name != null : !NAME_EDEFAULT.equals(name);
      case JEUPackage.JEU__JOUEUR:
        return joueur != null;
      case JEUPackage.JEU__JEUELEMENT:
        return jeuelement != null && !jeuelement.isEmpty();
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (name: ");
    result.append(name);
    result.append(')');
    return result.toString();
  }

} //JeuImpl
