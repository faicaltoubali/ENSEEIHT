/**
 * generated by Xtext 2.17.1
 */
package fr.n7.jEU.impl;

import fr.n7.jEU.JEUPackage;
import fr.n7.jEU.Lieu;
import fr.n7.jEU.Objet;
import fr.n7.jEU.condition;
import fr.n7.jEU.typeactivite;
import fr.n7.jEU.typevisibilite;

import org.eclipse.emf.common.notify.Notification;
import org.eclipse.emf.common.notify.NotificationChain;

import org.eclipse.emf.ecore.EClass;
import org.eclipse.emf.ecore.InternalEObject;

import org.eclipse.emf.ecore.impl.ENotificationImpl;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Objet</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#getTaille <em>Taille</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#getQuantite <em>Quantite</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#getVisibilite <em>Visibilite</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#getActivite <em>Activite</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#isDansLieu <em>Dans Lieu</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#getLieu <em>Lieu</em>}</li>
 *   <li>{@link fr.n7.jEU.impl.ObjetImpl#getConditionDeposer <em>Condition Deposer</em>}</li>
 * </ul>
 *
 * @generated
 */
public class ObjetImpl extends JeuElementImpl implements Objet
{
  /**
   * The default value of the '{@link #getTaille() <em>Taille</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTaille()
   * @generated
   * @ordered
   */
  protected static final int TAILLE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getTaille() <em>Taille</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getTaille()
   * @generated
   * @ordered
   */
  protected int taille = TAILLE_EDEFAULT;

  /**
   * The default value of the '{@link #getQuantite() <em>Quantite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuantite()
   * @generated
   * @ordered
   */
  protected static final int QUANTITE_EDEFAULT = 0;

  /**
   * The cached value of the '{@link #getQuantite() <em>Quantite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getQuantite()
   * @generated
   * @ordered
   */
  protected int quantite = QUANTITE_EDEFAULT;

  /**
   * The default value of the '{@link #getVisibilite() <em>Visibilite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibilite()
   * @generated
   * @ordered
   */
  protected static final typevisibilite VISIBILITE_EDEFAULT = typevisibilite.VISIBLE;

  /**
   * The cached value of the '{@link #getVisibilite() <em>Visibilite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getVisibilite()
   * @generated
   * @ordered
   */
  protected typevisibilite visibilite = VISIBILITE_EDEFAULT;

  /**
   * The default value of the '{@link #getActivite() <em>Activite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActivite()
   * @generated
   * @ordered
   */
  protected static final typeactivite ACTIVITE_EDEFAULT = typeactivite.ACTIF;

  /**
   * The cached value of the '{@link #getActivite() <em>Activite</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getActivite()
   * @generated
   * @ordered
   */
  protected typeactivite activite = ACTIVITE_EDEFAULT;

  /**
   * The default value of the '{@link #isDansLieu() <em>Dans Lieu</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDansLieu()
   * @generated
   * @ordered
   */
  protected static final boolean DANS_LIEU_EDEFAULT = false;

  /**
   * The cached value of the '{@link #isDansLieu() <em>Dans Lieu</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #isDansLieu()
   * @generated
   * @ordered
   */
  protected boolean dansLieu = DANS_LIEU_EDEFAULT;

  /**
   * The cached value of the '{@link #getLieu() <em>Lieu</em>}' reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getLieu()
   * @generated
   * @ordered
   */
  protected Lieu lieu;

  /**
   * The cached value of the '{@link #getConditionDeposer() <em>Condition Deposer</em>}' containment reference.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getConditionDeposer()
   * @generated
   * @ordered
   */
  protected condition conditionDeposer;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected ObjetImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return JEUPackage.Literals.OBJET;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getTaille()
  {
    return taille;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setTaille(int newTaille)
  {
    int oldTaille = taille;
    taille = newTaille;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__TAILLE, oldTaille, taille));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public int getQuantite()
  {
    return quantite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setQuantite(int newQuantite)
  {
    int oldQuantite = quantite;
    quantite = newQuantite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__QUANTITE, oldQuantite, quantite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public typevisibilite getVisibilite()
  {
    return visibilite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setVisibilite(typevisibilite newVisibilite)
  {
    typevisibilite oldVisibilite = visibilite;
    visibilite = newVisibilite == null ? VISIBILITE_EDEFAULT : newVisibilite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__VISIBILITE, oldVisibilite, visibilite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public typeactivite getActivite()
  {
    return activite;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setActivite(typeactivite newActivite)
  {
    typeactivite oldActivite = activite;
    activite = newActivite == null ? ACTIVITE_EDEFAULT : newActivite;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__ACTIVITE, oldActivite, activite));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean isDansLieu()
  {
    return dansLieu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setDansLieu(boolean newDansLieu)
  {
    boolean oldDansLieu = dansLieu;
    dansLieu = newDansLieu;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__DANS_LIEU, oldDansLieu, dansLieu));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Lieu getLieu()
  {
    if (lieu != null && lieu.eIsProxy())
    {
      InternalEObject oldLieu = (InternalEObject)lieu;
      lieu = (Lieu)eResolveProxy(oldLieu);
      if (lieu != oldLieu)
      {
        if (eNotificationRequired())
          eNotify(new ENotificationImpl(this, Notification.RESOLVE, JEUPackage.OBJET__LIEU, oldLieu, lieu));
      }
    }
    return lieu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public Lieu basicGetLieu()
  {
    return lieu;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setLieu(Lieu newLieu)
  {
    Lieu oldLieu = lieu;
    lieu = newLieu;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__LIEU, oldLieu, lieu));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public condition getConditionDeposer()
  {
    return conditionDeposer;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  public NotificationChain basicSetConditionDeposer(condition newConditionDeposer, NotificationChain msgs)
  {
    condition oldConditionDeposer = conditionDeposer;
    conditionDeposer = newConditionDeposer;
    if (eNotificationRequired())
    {
      ENotificationImpl notification = new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__CONDITION_DEPOSER, oldConditionDeposer, newConditionDeposer);
      if (msgs == null) msgs = notification; else msgs.add(notification);
    }
    return msgs;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setConditionDeposer(condition newConditionDeposer)
  {
    if (newConditionDeposer != conditionDeposer)
    {
      NotificationChain msgs = null;
      if (conditionDeposer != null)
        msgs = ((InternalEObject)conditionDeposer).eInverseRemove(this, EOPPOSITE_FEATURE_BASE - JEUPackage.OBJET__CONDITION_DEPOSER, null, msgs);
      if (newConditionDeposer != null)
        msgs = ((InternalEObject)newConditionDeposer).eInverseAdd(this, EOPPOSITE_FEATURE_BASE - JEUPackage.OBJET__CONDITION_DEPOSER, null, msgs);
      msgs = basicSetConditionDeposer(newConditionDeposer, msgs);
      if (msgs != null) msgs.dispatch();
    }
    else if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, JEUPackage.OBJET__CONDITION_DEPOSER, newConditionDeposer, newConditionDeposer));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public NotificationChain eInverseRemove(InternalEObject otherEnd, int featureID, NotificationChain msgs)
  {
    switch (featureID)
    {
      case JEUPackage.OBJET__CONDITION_DEPOSER:
        return basicSetConditionDeposer(null, msgs);
    }
    return super.eInverseRemove(otherEnd, featureID, msgs);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case JEUPackage.OBJET__TAILLE:
        return getTaille();
      case JEUPackage.OBJET__QUANTITE:
        return getQuantite();
      case JEUPackage.OBJET__VISIBILITE:
        return getVisibilite();
      case JEUPackage.OBJET__ACTIVITE:
        return getActivite();
      case JEUPackage.OBJET__DANS_LIEU:
        return isDansLieu();
      case JEUPackage.OBJET__LIEU:
        if (resolve) return getLieu();
        return basicGetLieu();
      case JEUPackage.OBJET__CONDITION_DEPOSER:
        return getConditionDeposer();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case JEUPackage.OBJET__TAILLE:
        setTaille((Integer)newValue);
        return;
      case JEUPackage.OBJET__QUANTITE:
        setQuantite((Integer)newValue);
        return;
      case JEUPackage.OBJET__VISIBILITE:
        setVisibilite((typevisibilite)newValue);
        return;
      case JEUPackage.OBJET__ACTIVITE:
        setActivite((typeactivite)newValue);
        return;
      case JEUPackage.OBJET__DANS_LIEU:
        setDansLieu((Boolean)newValue);
        return;
      case JEUPackage.OBJET__LIEU:
        setLieu((Lieu)newValue);
        return;
      case JEUPackage.OBJET__CONDITION_DEPOSER:
        setConditionDeposer((condition)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.OBJET__TAILLE:
        setTaille(TAILLE_EDEFAULT);
        return;
      case JEUPackage.OBJET__QUANTITE:
        setQuantite(QUANTITE_EDEFAULT);
        return;
      case JEUPackage.OBJET__VISIBILITE:
        setVisibilite(VISIBILITE_EDEFAULT);
        return;
      case JEUPackage.OBJET__ACTIVITE:
        setActivite(ACTIVITE_EDEFAULT);
        return;
      case JEUPackage.OBJET__DANS_LIEU:
        setDansLieu(DANS_LIEU_EDEFAULT);
        return;
      case JEUPackage.OBJET__LIEU:
        setLieu((Lieu)null);
        return;
      case JEUPackage.OBJET__CONDITION_DEPOSER:
        setConditionDeposer((condition)null);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case JEUPackage.OBJET__TAILLE:
        return taille != TAILLE_EDEFAULT;
      case JEUPackage.OBJET__QUANTITE:
        return quantite != QUANTITE_EDEFAULT;
      case JEUPackage.OBJET__VISIBILITE:
        return visibilite != VISIBILITE_EDEFAULT;
      case JEUPackage.OBJET__ACTIVITE:
        return activite != ACTIVITE_EDEFAULT;
      case JEUPackage.OBJET__DANS_LIEU:
        return dansLieu != DANS_LIEU_EDEFAULT;
      case JEUPackage.OBJET__LIEU:
        return lieu != null;
      case JEUPackage.OBJET__CONDITION_DEPOSER:
        return conditionDeposer != null;
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (taille: ");
    result.append(taille);
    result.append(", quantite: ");
    result.append(quantite);
    result.append(", visibilite: ");
    result.append(visibilite);
    result.append(", activite: ");
    result.append(activite);
    result.append(", dansLieu: ");
    result.append(dansLieu);
    result.append(')');
    return result.toString();
  }

} //ObjetImpl
